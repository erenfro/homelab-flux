---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: qbittorrent
  labels:
    app: qbittorrent
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: longhorn
      namespace: storage
    - name: volsync
      namespace: volsync
  values:
    controllers:
      main:
        labels:
          app: qbittorrent
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/qbittorrent
              tag: 4.6.3@sha256:a4ad890e8c4a287c17d12ca22eb1d84a046aba2efbd882bf7d6eb12459f6a70c
              # Rollback to this version to set initial password
              #tag: 4.6.0
            env:
              TZ: ${TIMEZONE}
              QBITTORRENT__PORT: &httpPort 80
              QBITTORRENT__BT_PORT: &bittorrentPort 50413
              QBT_Preferences__WebUI__AlternativeUIEnabled: false
              QBT_Preferences__WebUI__AuthSubnetWhitelistEnabled: true
              QBT_Preferences__WebUI__AuthSubnetWhitelist: |-
                ${CLUSTER_CIDR}, ${SERVICE_CIDR}, 172.18.0.0/22
              QBT_Preferences__WebUI__LocalHostAuth: false
              QBT_BitTorrent__Session__Interface: eth0
              QBT_BitTorrent__Session__InterfaceAddress:
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              QBT_BitTorrent__Session__InterfaceName: eth0
            #probes:
            #  liveness: &probes
            #    enabled: true
            #    custom: true
            #    spec:
            #      httpGet:
            #        path: /api/v2/app/version
            #        port: *httpPort
            #      initialDelaySeconds: 60
            #      periodSeconds: 10
            #      timeoutSeconds: 5
            #      failureThreshold: 5
            #  readiness: *probes
            #  startup:
            #    enabled: false
            resources:
              requests:
                cpu: 200m
                memory: 2Gi
              limits:
                memory: 16Gi
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
          #xseed:
          #  image:
          #    repository: ghcr.io/cross-seed/cross-seed
          #    tag: 5.9.1@sha256:43362a39bb0ec825c046bbc255c41d557f98c0835dd1d6146eb93e03d36a98b9
          #  args:
          #    - daemon
          #  env:
          #    TZ: "${TIMEZONE}"
          #    CROSSSEED_PORT: &xseedPort 2468
          #    PORT: *xseedPort
          #  envFrom:
          #    - secretRef:
          #        name: cross-seed-secret
          #  resources:
          #    requests:
          #      cpu: 10m
          #      memory: 128Mi
          #    limits:
          #      memory: 512Mi
          #  securityContext: *securityContext
        pod:
          metadata:
            labels:
              app: qbittorrent
          securityContext:
            runAsUser: 1031
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
              - 10000
    service:
      main:
        ports:
          http:
            port: *httpPort
          #xseed:
          #  port: *xseedPort
      bittorrent:
        controller: main
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: "${IPAM_QBITTORENT}"
          ingress.cilium.io/loadbalancer-mode: dedicated
          kubernetes.io/ingress.class: cilium
        ports:
          bittorrent:
            enabled: true
            port: *bittorrentPort
            protocol: TCP
    ingress:
      main:
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: mdi:seedling
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: qBittorrent
          gethomepage.dev/icon: qbittorrent.png
          gethomepage.dev/widget.type: qbittorrent
          gethomepage.dev/widget.url: http://qbittorrent.downloads:8080
          gethomepage.dev/widget.username: "{{HOMEPAGE_VAR_QBITTORRENT_USERNAME}}"
          gethomepage.dev/widget.password: "{{HOMEPAGE_VAR_QBITTORRENT_PASSWORD}}"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_hide_header "x-webkit-csp";
            proxy_hide_header "content-security-policy";
            proxy_hide_header "X-Frame-Options";
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/base/qbittorrent/onedark.css"></head>';
            sub_filter_once on;
        enabled: true
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
          - host: &customHost qb.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
              - *customHost
    persistence:
      config:
        enabled: true
        existingClaim: qbittorrent
      xseed:
        type: configMap
        name: cross-seed-configmap
        globalMounts:
          - path: /config/config.js
            subPath: config.js
            readOnly: true
      completed-script:
        type: configMap
        name: qbittorrent-scripts
        defaultMode: 0775
        globalMounts:
          - path: /scripts/completed.sh
            subPath: completed.sh
            readOnly: true
      downloads:
        type: nfs
        server: mega.home.ld
        path: /volume1/Media
        globalMounts:
          - path: /media
