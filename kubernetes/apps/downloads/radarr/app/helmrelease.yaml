---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app radarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: longhorn
      namespace: storage
    - name: volsync
      namespace: volsync
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
          secret.reloader.stakater.com/reload: &secret radarr-secret
        #initContainers:
        #  init-db:
        #    image:
        #      repository: ghcr.io/onedr0p/postgres-init
        #      tag: 16
        #      pullPolicy: IfNotPresent
        #    envFrom:
        #      - secretRef:
        #          name: *secret
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.3.6.8612@sha256:ef3154aaecf3ffa52e68f5109bca912df5f53c36079fa430e29bad791d091cd8
            env:
              TZ: ${TIMEZONE}
              PUSHOVER_DEBUG: "false"
              RADARR__AUTHENTICATION_METHOD: External
              RADARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              RADARR__INSTANCE_NAME: Radarr
              RADARR__PORT: &port 80
              RADARR__LOG_LEVEL: info
              RADARR__THEME: dark
            envFrom:
              - secretRef:
                  name: *secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 10m
                memory: 256M
              limits:
                memory: 1Gi
        pod:
          securityContext:
            runAsUser: 1031
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [10000]
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/appName: Radarr
          hajimari.io/icon: material-symbols-light:movie-outline
          #gethomepage.dev/enabled: "true"
          #gethomepage.dev/group: Downloads
          #gethomepage.dev/name: Radarr
          #gethomepage.dev/icon: radarr.png
          #gethomepage.dev/widget.type: radarr
          #gethomepage.dev/widget.url: http://radarr.downloads
          #gethomepage.dev/widget.key: "{{HOMEPAGE_VAR_RADARR_TOKEN}}"
        enabled: true
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: *app
      pushover-notify:
        type: configMap
        name: radarr-configmap
        defaultMode: 0775
        globalMounts:
          - path: /scripts/pushover-notify.sh
            subPath: pushover-notify.sh
            readOnly: true
      media:
        type: nfs
        server: mega.home.ld
        path: /volume1/Media
        globalMounts:
          - path: /media
