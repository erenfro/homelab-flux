---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: selfhosted
spec:
  interval: 15m
  chart:
    spec:
      chart: nextcloud
      version: 4.5.5
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: longhorn
      namespace: storage
  values:
    image:
      flavor: fpm-alpine
      #repository: docker.io/library/nextcloud
      #tag: 27.1.4
    nginx:
      enabled: true

    nextcloud:
      extraInitContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:15
          envFrom:
            - secretRef:
                name: &secret nextcloud-secret
      datadir: /var/www/data
      extraEnv:
        - name: REDIS_HOST
          value: nextcloud-redis.selfhosted
          #value: redis-headless.database.svc.cluster.local
        - name: REDIS_HOST_PORT
          value: "6379"
        #- name: REDIS_HOST_PASSWORD
        #  value: "${REDIS_PASSWORD}"
          #valueFrom:
          #  secretKeyRef:
          #    name: *secret
          #    key: REDIS_PASSWORD
      existingSecret:
        enabled: true
        secretName: *secret
        usernameKey: nextcloud-username
        passwordKey: nextcloud-password
      host: &host "cloud.${SECRET_DOMAIN}"
      configs:
        custom.config.php: |-
          <?php
          $CONFIG = array(
            'trusted_proxies' => ['external.${SECRET_DOMAIN}'],
            'overwriteprotocol' => 'https',
            'default_phone_region' => 'CA',
            'trashbin_retention_obligation' => 'auto, 30',
            'auth.bruteforce.protection.enabled' => true,
            'default_language' => 'en',
            'default_locale' => 'en_GB',
            'filesystem_check_changes' => 1,
          );
        smtp-noverify.config.php: |-
          <?php
          $CONFIG = array(
            'mail_smtpstreamoptions' => array(
              'ssl' => array(
                'allow_self_signed' => true,
                'verify_peer' => false,
                'verify_peer_name' => false
              )
            )
          );
      mail:
        enabled: true
        fromAddress: admin
        domain: "${SECRET_DOMAIN}"
        smtp:
          host: "${MAIL_PROD_SMTP}"
          #secure: none
          port: 25
          authtype: NONE
          name: ""
          passsword: ""
      securityContext:
        runAsUser: 1022
        runAsGroup: 1022
        runAsNonRoot: true

    ingress:
      enabled: true
      className: external
      annotations:
        external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        nginx.ingress.kubernetes.io/proxy-body-size: 4G
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;
          rewrite ^/.well-known/webfinger /public.php?service=webfinger last;
          rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location ^~ /.well-known {
            location = /.well-known/carddav { return 301 /remote.php/dav/; }
            location = /.well-known/caldav { return 301 /remote.php/dav/; }
            location = /.well-known/acme-challenge { try_files $uri $uri/ =404; }
            location = /.well-known/pki-validation { try_files $uri $uri/ =404; }
            return 301 /index.php$request_uri;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/)  { return 404; }
          location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console)                { return 404; }
      path: /
      pathType: Prefix
      tls:
        - hosts:
            - *host
      #hosts:
      #  - host: &host "cloud.${SECRET_DOMAIN}"
      #    paths:
      #      - path: /
      #        pathType: Prefix
      #tls:
      #  - hosts:
      #      - *host

    internalDatabase:
      enabled: false

    externalDatabase:
      enabled: true
      type: postgresql
      database: nextcloud
      existingSecret:
        enabled: true
        secretName: *secret
        hostKey: POSTGRES_HOST
        databaseKey: POSTGRES_DBNAME
        usernameKey: POSTGRES_USER
        passwordKey: POSTGRES_PASS

    persistence:
      enabled: true
      existingClaim: nextcloud
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-nfs

    #livenessProbe:
    #  enabled: false
    #readinessProbe:
    #  enabled: false
    startupProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 30
      successThreshold: 1
