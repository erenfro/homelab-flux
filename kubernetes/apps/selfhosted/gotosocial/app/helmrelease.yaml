---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: gotosocial
  namespace: selfhosted
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: gotosocial-secret
        containers:
          main:
            image:
              repository: superseriousbusiness/gotosocial
              pullPolicy: IfNotPresent
              tag: 0.13.0
            env:
              TZ: ${TIMEZONE}
              GTS_HOST: "social.${SECRET_DOMAIN}"
              GTS_LETSENCRYPT_ENABLED: "false"
              GTS_LETSENCRYPT_EMAIL_ADDRESS: ""
              #GTS_TRUSTED_PROXIES: ""
              # OAuth
              GTS_OIDC_ENABLED: "false"
              GTS_OIDC_IDP_NAME: "Authentik"
              GTS_OIDC_ISSUER: "https://auth.${SECRET_DOMAIN}/application/o/gotosocial/.well-known/openid-configuration"
              GTS_OIDC_SCOPES: "openid,email,profile,groups"
              GTS_OIDC_ADMIN_GROUPS: "GTS-Admins"
            envFrom: *envFrom
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
    service:
      main:
        ports:
          http:
            port: 8080
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hosts:
          - host: &host "social.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    #persistence:
    #  uploads:
    #    enabled: true
    #    existingClaim: hedgedoc
    #    globalMounts:
    #      - path: /hedgedoc/public/uploads
    #persistence:
      #api-data:
      #  enabled: true
      #  globalMounts:
      #    - path: /files/data/
      #  existingClaim: gotosocial
