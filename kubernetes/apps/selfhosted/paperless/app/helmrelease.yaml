---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: paperless
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: paperless-secret

        containers:
          main:
            #type: statefulset
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.2.1
            env:
              # Configure application
              PAPERLESS_URL: https://{{ .Release.Name }}.${SECRET_DOMAIN}
              PAPERLESS_PORT: &port 80
              PAPERLESS_TIME_ZONE: "${TIMEZONE}"
              PAPERLESS_WEBSERVER_WORKERS: "2"
              PAPERLESS_TASK_WORKERS: "2"
              # Configure Remote User auth
              PAPERLESS_ENABLE_HTTP_REMOTE_USER: "true"
              PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: HTTP_X_AUTHENTIK_USERNAME
              # Configure folders
              PAPERLESS_CONSUMPTION_DIR: /library/incoming
              PAPERLESS_DATA_DIR: /library/data
              PAPERLESS_EXPORT_DIR: /library/export
              PAPERLESS_MEDIA_ROOT: /library/media
              # Configure folder importer
              PAPERLESS_CONSUMER_POLLING: "60"
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              # Configure OCR
              #PAPERLESS_OCR_LANGUAGES: eng
              #PAPERLESS_OCR_LANGUAGE: eng
              # Configure redis integration
              PAPERLESS_TIKA_ENABLED: "true"
              #PAPERLESS_REDIS: redis://paperless-redis.selfhosted.svc.cluster.local:6379
              #PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-tika.selfhosted.svc.cluster.local:3000
              #PAPERLESS_TIKA_ENDPOINT: http://paperless-gotenberg.selfhosted.svc.cluster.local:9998
              PAPERLESS_REDIS: redis://localhost:6379
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://localhost:3000
              PAPERLESS_TIKA_ENDPOINT: http://localhost:9998
              PAPERLESS_EMAIL_TASK_CRON: "*/5 * * * *"
              # Configure user permissions
              USERMAP_UID: "1022"
              USERMAP_GID: "1022"
            envFrom: *envFrom
            resources:
              requests:
                cpu: 11m
                memory: 1000M
              limits:
                memory: 4000M
          gotenburg:
            image:
              repository: thecodingmachine/gotenberg
              tag: 8.0.0
            env:
              - { name: DISABLE_GOOGLE_CHROME, value: "1" }
          tika:
            image:
              repository: ghcr.io/paperless-ngx/tika
              tag: 2.9.0-full
          redis:
            image:
              repository: public.ecr.aws/docker/library/redis
              tag: 7.2.3
        pod:
          securityContext:
            #runAsUser: 1022
            #runAsGroup: 1022
            fsGroup: 1022
            #fsGroup: 65542
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
              - 65542

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-internal-proxy-outpost.security.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: /outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      library:
        enabled: true
        existingClaim: paperless-nfs
        globalMounts:
          - path: /library
      #data:
      #  enabled: true
      #  globalMounts:
      #    - path: /data/local
      #  existingClaim: paperless
      #library:
      #  type: nfs
      #  server: mega.home.ld
      #  path: /volume1/Media/paperless
      #  globalMounts:
      #    - path: /library
