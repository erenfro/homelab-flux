---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: hedgedoc
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      interval: 15m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.1
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: &secret hedgedoc-secret
          #init-data:
          #  image:
          #    repository: busybox
          #    tag: 1.28
          #    command: ['sh', '-c', 'cp -a /hedgedoc/public/docs /hedgedog/public/uploads /hedgedog/public/uploads /files/data/']
        containers:
          main:
            image:
              repository: quay.io/hedgedoc/hedgedoc
              pullPolicy: IfNotPresent
              tag: 1.9.9
            env:
              TZ: ${TIMEZONE}
              PUID: 1000
              PGID: 1000
              #CMD_DB_DIALECT: postgres
              # toggle to allow more user registering
              # use ldap user instead, with group hedgedoc
              CMD_EMAIL: false
              CMD_ALLOW_EMAIL_REGISTER: false
              CMD_DOMAIN: md.${SECRET_DOMAIN}
              CMD_PROTOCOL_USESSL: true
              CMD_URL_ADDPORT: false
              CMD_ENABLE_STATUS_API: true
              CMD_ALLOW_GRAVATAR: true
              CMD_IMAGE_UPLOAD_TYPE: filesystem
              #CMD_IMAGE_UPLOAD_TYPE: minio
              CMD_ALLOW_ANONYMOUS: true
              CMD_ALLOW_ANONYMOUS_EDITS: false
              CMD_ALLOW_FREEURL: true
              CMD_REQUIRE_FREEURL_AUTHENTICATION: true
              CMD_DEFAULT_PERMISSION: limited
              # Authentik
              CMD_OAUTH2_PROVIDERNAME: "authentik"
              CMD_OAUTH2_SCOPE: "openid email profile"
              CMD_OAUTH2_USER_PROFILE_URL: "https://auth.${SECRET_DOMAIN}/application/o/userinfo/"
              CMD_OAUTH2_TOKEN_URL: "https://auth.${SECRET_DOMAIN}/application/o/token/"
              CMD_OAUTH2_AUTHORIZATION_URL: "https://auth.${SECRET_DOMAIN}/application/o/authorize/"
              CMD_OAUTH2_USER_PROFILE_USERNAME_ATTR: "preferred_username"
              CMD_OAUTH2_USER_PROFILE_DISPLAY_NAME_ATTR: "name"
              CMD_OAUTH2_USER_PROFILE_EMAIL_ATTR: "email"
              CMD_OAUTH2_USER_PROFILE_ID_ATTR: "sub"
              CMD_OAUTH2_ROLES_CLAIM: "groups"
              CMD_OAUTH2_ACCESS_ROLE: "hedgedoc"
            envFrom:
              - secretRef:
                  name: *secret
            #  - configMapRef:
            #      name: hedgedoc-ldap-configmap
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
    service:
      main:
        ports:
          http:
            port: 3000
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          #nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-internal-proxy-outpost.security.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          #nginx.ingress.kubernetes.io/auth-signin: /outpost.goauthentik.io/start?rd=$escaped_request_uri
          #nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          #nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: &host "md.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      uploads:
        enabled: true
        existingClaim: hedgedoc
        globalMounts:
          - path: /hedgedoc/public/uploads
    #persistence:
      #api-data:
      #  enabled: true
      #  globalMounts:
      #    - path: /files/data/
      #  existingClaim: hedgedoc
      #config-file:
      #  type: configMap
      #  name: hedgedoc-configmap
      #  globalMounts:
      #    - path: /files/config.json
      #      subPath: config.json
      #      readOnly: true
