---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: organizr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: longhorn
      namespace: storage
    - name: volsync
      namespace: volsync
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        #initContainers:
        #  init-db:
        #    image:
        #      repository: ghcr.io/onedr0p/postgres-init
        #      tag: 15
        #      pullPolicy: IfNotPresent
        #    envFrom: &envFrom
        #      - secretRef:
        #          name: organizr-secret
        containers:
          main:
            image:
              repository: ghcr.io/organizr/organizr
              tag: latest@sha256:1ce319d73cdfd2666ec7ef21e15907531fabc8a6f333c4ac61e2b2e9d2d162f5
            env:
              TZ: ${TIMEZONE}
              PUID: "568"
              PGID: "568"
              branch: 'v2-master'
              PORT: &port 80
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/v2/ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 10m
                memory: 128M
              limits:
                memory: 512Gi
        pod:
          securityContext:
            #runAsUser: 568
            #runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            #supplementalGroups: [10000]
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/appName: Organizr
          hajimari.io/icon: material-symbols-light:tv-guide-outline
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hosts:
          - host: &host "media.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: organizr
