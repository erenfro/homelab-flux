apiVersion: mariadb.mmontes.io/v1alpha1
kind: MariaDB
metadata:
  name: mariadb-galera
spec:
  rootPasswordSecretKeyRef:
    name: mariadb-secret
    key: password
  database: mariadb
  username: mariadb
  passwordSecretKeyRef:
    name: mariadb-secret
    key: password

  image: "mariadb:11.2.3"
  imagePullPolicy: IfNotPresent
  port: 3306

  nodeSelector:
    database/mysql: yes

  env:
    - name: TZ
      value: ${TIMEZONE}

  replicas: 3

  galera:
    enabled: true
    primary:
      podIndex: 0
      automaticFailover: true
    sst: mariabackup
    replicaThreads: 1
    agent:
      image: ghcr.io/mariadb-operator/agent:v0.0.3
      #pullPolicy: IfNotPresent
      port: 5555
      kubernetesAuth:
        enabled: true
      gracefulShutdownTimeout: 5s
    recovery:
      enabled: true
      clusterHealthyTimeout: 3m
      clusterBootstrapTimeout: 10m
      podRecoveryTimeout: 5m
      podSyncTimeout: 5m
    initContainer:
      image: ghcr.io/mariadb-operator/init:v0.0.6
      #pullPolicy: IfNotPresent
    volumeClaimTemplate:
      storageClassName: local-path
      resources:
        requests:
          storage: 300Mi
      accessModes:
        - ReadWriteOnce

  service:
    type: LoadBalancer
    annotations:
      external-dns.alpha.kubernetes.io/hostname: "mysql-lb.${SECRET_DOMAIN}"
      io.cilium/lb-ipam-ips: "${IPAM_MARIADB_LB}"
    #connection:
    #  secretName: mariadb-galera-conn
    #  secretTemplate:
    #    key: dsn

  primaryService:
    type: LoadBalancer
    annotations:
      external-dns.alpha.kubernetes.io/hostname: "mysql.${SECRET_DOMAIN}"
      io.cilium/lb-ipam-ips: "${IPAM_MARIADB_RW}"
    #primaryConnection:
    #  secretName: mariadb-galera-conn-primary
    #  secretTemplate:
    #    key: dsn

  secondaryService:
    type: LoadBalancer
    annotations:
      external-dns.alpha.kubernetes.io/hostname: "mysql-ro.${SECRET_DOMAIN}"
      io.cilium/lb-ipam-ips: "${IPAM_MARIADB_RO}"
    #secondaryConnection:
    #  secretName: mariadb-galera-conn-secondary
    #  secretTemplate:
    #    key: dsn

  volumeClaimTemplate:
    storageClassName: local-path
    resources:
      requests:
        storage: 2Gi
    accessModes:
      - ReadWriteOnce

  resources:
    requests:
      cpu: 300m
      memory: 256Mi
    limits:
      memory: 1Gi

  # For Galera, Specifically
  podSecurityContext:
    runAsUser: 0

  securityContext:
    allowPrivilegeEscalation: false

  #podSecurityContext:
  #  runAsUser: 568
  #  runAsGroup: 568
  #  fsGroup: 568
  #  fsGroupChangePolicy: OnRootMismatch

  #service:
  #  type: LoadBalancer
  #  annotations:
  #    io.cilium/lb-ipam-ips: "${IPAM_MARIADB}"

  #nodeSelector:
  #  database/mysql: yes

  affinity:
    #nodeAffinity:
    #  requiredDuringSchedulingIgnoredDuringExecution:
    #    nodeSelectorTerms:
    #      - matchExpressions:
    #        - key: database.mysql
    #          operator: In
    #          values:
    #            - "yes"
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - topologyKey: "kubernetes.io/hostname"

  tolerations:
    - key: "mariadb.mmontes.io/ha"
      operator: "Exists"
      effect: "NoSchedule"

  podDisruptionBudget:
    maxUnavailable: 66%

  updateStrategy:
    type: RollingUpdate

  myCnf: |
    [mariadb]
    bind-address=*
    default_storage_engine=InnoDB
    binlog_format=row
    innodb_autoinc_lock_mode=2
    max_allowed_packet=256M

  #metrics:
  #  enabled: true
  #  exporter:
  #    image: "prom/mysqld-exporter:v0.15.1"
  #    imagePullPolicy: IfNotPresent
  #    resources:
  #      requests:
  #        cpu: 50m
  #        memory: 64Mi
  #      limits:
  #        cpu: 300m
  #        memory: 512Mi
  #  serviceMonitor:
  #    prometheusRelease: kube-prometheus-stack
  #    interval: 10s
  #    scrapeTimeout: 10s
